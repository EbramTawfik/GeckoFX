// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file xpctest_params.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// Test pararameter passing and argument conversion.
    ///
    /// Each test method returns the value in 'b', and copies 'a' into 'b'. This lets
    /// us test return values, in params, and inout params (out params should be
    /// covered by the intersection of return values and inout).
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("fe2b7433-ac3b-49ef-9344-b67228bfdd46")]
	public interface nsIXPCTestParams
	{
		
		/// <summary>
        /// These types correspond to the ones in typelib.py
        /// </summary>
		[return: MarshalAs(UnmanagedType.U1)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool TestBoolean([MarshalAs(UnmanagedType.U1)] bool a, [MarshalAs(UnmanagedType.U1)] ref bool b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr TestOctet(System.IntPtr a, ref System.IntPtr b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		short TestShort(short a, ref short b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int TestLong(int a, ref int b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int TestLongLong(long a, ref long b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint TestUnsignedShort(ushort a, ref ushort b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint TestUnsignedLong(uint a, ref uint b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint TestUnsignedLongLong(ulong a, ref ulong b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		float TestFloat(float a, ref float b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		double TestDouble(double a, ref float b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		char TestChar(char a, ref char b);
		
		[return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.StringMarshaler")]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string TestString([MarshalAs(UnmanagedType.LPStr)] string a, [MarshalAs(UnmanagedType.LPStr)] ref string b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		char TestWchar(char a, ref char b);
		
		[return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.WStringMarshaler")]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string TestWstring([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.WStringMarshaler")] string a, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.WStringMarshaler")] ref string b);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestDOMString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase a, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase b, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase retval);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestAString([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase a, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase b, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase retval);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestAUTF8String([MarshalAs(UnmanagedType.LPStruct)] nsAUTF8StringBase a, [MarshalAs(UnmanagedType.LPStruct)] nsAUTF8StringBase b, [MarshalAs(UnmanagedType.LPStruct)] nsAUTF8StringBase retval);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestACString([MarshalAs(UnmanagedType.LPStruct)] nsACStringBase a, [MarshalAs(UnmanagedType.LPStruct)] nsACStringBase b, [MarshalAs(UnmanagedType.LPStruct)] nsACStringBase retval);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		Gecko.JsVal TestJsval(ref Gecko.JsVal a, ref Gecko.MutableJSVal b);
		
		/// <summary>
        /// Test arrays.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		@short TestShortArray(uint aLength, @short a, ref uint bLength, ref @short b, ref uint rvLength);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestDoubleArray(uint aLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0)] double[] a, ref uint bLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=2)] ref double[] b, ref uint rvLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=4)] ref double[] rv);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestStringArray(uint aLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0)] string[] a, ref uint bLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=2)] ref string[] b, ref uint rvLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=4)] ref string[] rv);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestWstringArray(uint aLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0)] System.IntPtr[] a, ref uint bLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=2)] ref System.IntPtr[] b, ref uint rvLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=4)] ref System.IntPtr[] rv);
		
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestInterfaceArray(uint aLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0)] nsIXPCTestInterfaceA[] a, ref uint bLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=2)] ref nsIXPCTestInterfaceA[] b, ref uint rvLength, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=4)] ref nsIXPCTestInterfaceA[] rv);
		
		/// <summary>
        /// Test sized strings.
        /// </summary>
		[return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.StringMarshaler", SizeParamIndex=4)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string TestSizedString(uint aLength, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=0)] string a, ref uint bLength, [MarshalAs(UnmanagedType.LPStr, SizeParamIndex=2)] ref string b, ref uint rvLength);
		
		[return: MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.WStringMarshaler", SizeParamIndex=4)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		string TestSizedWstring(uint aLength, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.WStringMarshaler", SizeParamIndex=0)] string a, ref uint bLength, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.WStringMarshaler", SizeParamIndex=2)] ref string b, ref uint rvLength);
		
		/// <summary>
        /// Test iid_is.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		System.IntPtr TestInterfaceIs(System.Guid aIID, System.IntPtr a, ref System.Guid bIID, ref System.IntPtr b, ref System.Guid rvIID);
		
		/// <summary>
        /// in mozilla-central, but calendar stuff depends on it.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void TestInterfaceIsArray(uint aLength, System.Guid aIID, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=0)] System.IntPtr[] a, ref uint bLength, ref System.Guid bIID, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=3)] ref System.IntPtr[] b, ref uint rvLength, ref System.Guid rvIID, [MarshalAs(UnmanagedType.LPArray, SizeParamIndex=6)] ref System.IntPtr[] rv);
	}
}
