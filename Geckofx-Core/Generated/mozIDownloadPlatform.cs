// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file mozIDownloadPlatform.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///This Source Code Form is subject to the terms of the Mozilla Public
    /// License, v. 2.0. If a copy of the MPL was not distributed with this
    /// file, You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9f556e4a-d9b3-46c3-9f8f-d0db1ac6c8c1")]
	public interface mozIDownloadPlatform
	{
		
		/// <summary>
        /// Perform platform specific operations when a download is done.
        ///
        /// Windows:
        /// Add the download to the recent documents list
        /// Set the file to be indexed for searching
        /// Mac:
        /// Bounce the downloads dock icon
        /// GTK:
        /// Add the download to the recent documents list
        /// Save the source uri in the downloaded file's metadata
        /// Android:
        /// Scan media
        ///
        /// @param aSource
        /// Source URI of the download
        /// @param aTarget
        /// Downloaded file
        /// @param aContentType
        /// The source's content type
        /// @param aIsPrivate
        /// True for private downloads
        /// @return none
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void DownloadDone([MarshalAs(UnmanagedType.Interface)] nsIURI aSource, [MarshalAs(UnmanagedType.Interface)] nsIFile aTarget, [MarshalAs(UnmanagedType.LPStruct)] nsACStringBase aContentType, [MarshalAs(UnmanagedType.U1)] bool aIsPrivate);
		
		/// <summary>
        /// Proxy for IInternetSecurityManager::MapUrlToZone().
        ///
        /// Windows only.
        ///
        /// @param aURL
        /// URI of the download
        /// @return Security Zone corresponding to aURL.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint MapUrlToZone([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aURL);
	}
	
	/// <summary>mozIDownloadPlatformConsts </summary>
	public class mozIDownloadPlatformConsts
	{
		
		// <summary>
        // Security Zone constants. Used by mapUrlToZone().
        // </summary>
		public const ulong ZONE_MY_COMPUTER = 0;
		
		// 
		public const ulong ZONE_INTRANET = 1;
		
		// 
		public const ulong ZONE_TRUSTED = 2;
		
		// 
		public const ulong ZONE_INTERNET = 3;
		
		// 
		public const ulong ZONE_RESTRICTED = 4;
	}
}
