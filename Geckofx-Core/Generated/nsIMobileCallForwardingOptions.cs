// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIMobileCallForwardingOptions.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///This Source Code Form is subject to the terms of the Mozilla Public
    /// License, v. 2.0. If a copy of the MPL was not distributed with this file,
    /// You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("c616ecb6-65f5-441e-b97e-c642ddef6888")]
	public interface nsIMobileCallForwardingOptions
	{
		
		/// <summary>
        /// Call forwarding rule status.
        ///
        /// It will be either not active (false), or active (true).
        ///
        /// Note: Unused for setting call forwarding options. It reports
        /// the status of the rule when getting how the rule is
        /// configured.
        ///
        /// @see 3GPP TS 27.007 7.11 "status".
        /// </summary>
		[return: MarshalAs(UnmanagedType.U1)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		bool GetActiveAttribute();
		
		/// <summary>
        /// Indicates what to do with the rule. It shall be one of the
        /// nsIMobileConnection.CALL_FORWARD_ACTION_* values.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		short GetActionAttribute();
		
		/// <summary>
        /// Indicates the reason the call is being forwarded. It shall be one of the
        /// nsIMobileConnection.CALL_FORWARD_REASON_* values.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		short GetReasonAttribute();
		
		/// <summary>
        /// Phone number of forwarding address.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void GetNumberAttribute([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aNumber);
		
		/// <summary>
        /// When "no reply" is enabled or queried, this gives the time in
        /// seconds to wait before call is forwarded.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		short GetTimeSecondsAttribute();
		
		/// <summary>
        /// Service for which the call forward is set up. It should be one of the
        /// nsIMobileConnection.ICC_SERVICE_CLASS_* values.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		short GetServiceClassAttribute();
	}
}
