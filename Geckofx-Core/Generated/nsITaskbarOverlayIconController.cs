// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsITaskbarOverlayIconController.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// Starting in Windows 7, applications can display an overlay on the icon in
    /// the taskbar. This class wraps around the native functionality to do this.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("b1858889-a698-428a-a14b-b5d60cff6de2")]
	public interface nsITaskbarOverlayIconController
	{
		
		/// <summary>
        /// Sets the overlay icon and its corresponding alt text.
        ///
        /// @param statusIcon The handle to the overlay icon. The icon will be scaled
        /// to the small icon size (16x16 at 96 dpi). Can be null, in
        /// which case if the taskbar button represents a single window
        /// the icon is removed.
        /// @param statusDescription The alt text version of the information
        /// conveyed by the overlay, for accessibility
        /// purposes.
        ///
        /// @note The behavior for window groups is managed by Windows.
        /// - If an overlay icon is set for any window in a window group and another
        /// overlay icon is already applied to the corresponding taskbar button, that
        /// existing overlay is replaced.
        /// - If null is passed in to replace the overlay currently being displayed,
        /// and if a previous overlay set for a different window in the group is
        /// still available, then that previous overlay is displayed.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOverlayIcon(imgIContainer statusIcon, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase statusDescription);
	}
}
