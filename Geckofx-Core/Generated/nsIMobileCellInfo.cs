// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIMobileCellInfo.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///This Source Code Form is subject to the terms of the Mozilla Public
    /// License, v. 2.0. If a copy of the MPL was not distributed with this file,
    /// You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("286a96fe-5519-459b-9ef8-2e34b9c1f9f2")]
	public interface nsIMobileCellInfo
	{
		
		/// <summary>
        /// Mobile Location Area Code (LAC) for GSM/WCDMA networks.
        ///
        /// Possible ranges from 0x0000 to 0xffff.
        /// -1 if the LAC is unknown.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetGsmLocationAreaCodeAttribute();
		
		/// <summary>
        /// Mobile Cell ID for GSM/WCDMA networks.
        ///
        /// Possible ranges from 0x00000000 to 0xffffffff.
        /// -1 if the cell id is unknown.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		long GetGsmCellIdAttribute();
		
		/// <summary>
        /// Base Station ID for CDMA networks.
        ///
        /// Possible ranges from 0 to 65535.
        /// -1 if the base station id is unknown.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetCdmaBaseStationIdAttribute();
		
		/// <summary>
        /// Base Station Latitude for CDMA networks.
        ///
        /// Possible ranges from -1296000 to 1296000.
        /// -2147483648 if the latitude is unknown.
        ///
        /// @see 3GPP2 C.S0005-A v6.0.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetCdmaBaseStationLatitudeAttribute();
		
		/// <summary>
        /// Base Station Longitude for CDMA networks.
        ///
        /// Possible ranges from -2592000 to 2592000.
        /// -2147483648 if the longitude is unknown.
        ///
        /// @see 3GPP2 C.S0005-A v6.0.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetCdmaBaseStationLongitudeAttribute();
		
		/// <summary>
        /// System ID for CDMA networks.
        ///
        /// Possible ranges from 0 to 32767.
        /// -1 if the system id is unknown.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetCdmaSystemIdAttribute();
		
		/// <summary>
        /// Network ID for CDMA networks.
        ///
        /// Possible ranges from 0 to 65535.
        /// -1 if the network id is unknown.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetCdmaNetworkIdAttribute();
	}
}
