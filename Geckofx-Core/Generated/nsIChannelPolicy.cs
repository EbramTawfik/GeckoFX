// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIChannelPolicy.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// A container for policy information to be used during channel creation.
    ///
    /// This interface exists to allow the content policy mechanism to function
    /// properly during channel redirects.  Channels can be created with this
    /// interface placed in the property bag and upon redirect, the interface can
    /// be transferred from the old channel to the new channel.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("18045e96-1afe-4162-837a-04691267158c")]
	public interface nsIChannelPolicy
	{
		
		/// <summary>
        /// Indicates what type of content is being loaded, e.g.
        /// nsIContentPolicy::TYPE_IMAGE
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetLoadTypeAttribute();
		
		/// <summary>
        /// Indicates what type of content is being loaded, e.g.
        /// nsIContentPolicy::TYPE_IMAGE
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetLoadTypeAttribute(uint aLoadType);
		
		/// <summary>
        /// A nsIContentSecurityPolicy object to determine if the load should
        /// be allowed.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsISupports GetContentSecurityPolicyAttribute();
		
		/// <summary>
        /// A nsIContentSecurityPolicy object to determine if the load should
        /// be allowed.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetContentSecurityPolicyAttribute([MarshalAs(UnmanagedType.Interface)] nsISupports aContentSecurityPolicy);
	}
}
