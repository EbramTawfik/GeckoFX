// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIThreadRetargetableRequest.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// nsIThreadRetargetableRequest
    ///
    /// Should be implemented by requests that support retargeting delivery of
    /// data off the main thread.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("27b84c48-5a73-4ba4-a8a4-8b5e649a145e")]
	public interface nsIThreadRetargetableRequest
	{
		
		/// <summary>
        /// Called to retarget delivery of OnDataAvailable to another thread. Should
        /// only be called before AsyncOpen for nsIWebsocketChannels, or during
        /// OnStartRequest for nsIChannels.
        /// Note: For nsIChannels, OnStartRequest and OnStopRequest will still be
        /// delivered on the main thread.
        ///
        /// @param aNewTarget New event target, e.g. thread or threadpool.
        ///
        /// Note: no return value is given. If the retargeting cannot be handled,
        /// normal delivery to the main thread will continue. As such, listeners
        /// should be ready to deal with OnDataAvailable on either the main thread or
        /// the new target thread.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RetargetDeliveryTo([MarshalAs(UnmanagedType.Interface)] nsIEventTarget aNewTarget);
	}
}
