// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIAccessControlEnforcer.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///Copyright Â© 2015, Deutsche Telekom, Inc. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("4994a960-26d9-4d71-82dd-4505bd97bf2a")]
	public interface nsIAccessControlEnforcer
	{
		
		/// <summary>
        /// Determines whether application identified by its ID should be allowed
        /// to access Secure Element's applet identified by its AID. Decision
        /// is made according to the GPD specification.
        ///
        /// @param  localId
        /// ID of an application accessing SE
        /// @param  seType
        /// Type of the SE.
        /// @param  aid
        /// AID of a SE applet
        /// @return Promise which is resolved to true if access should be allowed,
        /// false otherwise, and rejected if the application contains
        /// no developer certificate.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		Gecko.JsVal IsAccessAllowed(uint localId, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase seType, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aid);
	}
}
