// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIMobileIdentityUIGlue.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///This Source Code Form is subject to the terms of the Mozilla Public
    /// License, v. 2.0. If a copy of the MPL was not distributed with this file,
    /// You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("6c4c5758-e041-4e0d-98da-67bb552f8018")]
	public interface nsIMobileIdentityUIGlue
	{
		
		/// <summary>
        /// Request the creation of a Mobile ID UI flow.
        ///
        /// The permission prompt starts the verification flow asking the user
        /// for permission to share her phone number and allowing her to choose
        /// an already known phone number, a SIM which phone number is unknown
        /// (even in a multi-SIM scenario) or an external phone number.
        /// Selecting a phone number implies giving permission to share it with the
        /// API caller, so the UI should be clear about this.
        ///
        /// @manifestURL manifest URL of the mobile ID requester.
        /// @iccInfo array of objects containing the information about the
        /// SIM cards available in the device and that can be used for the
        /// phone number verification and share process.
        ///
        /// Returns a Promise. An instance of nsIMobileIdentityUIGluePromptResult will
        /// be returned as result of the Promise or a single string containing an error
        /// in case of rejection.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		Gecko.JsVal StartFlow([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase manifestURL, ref Gecko.JsVal iccInfo);
		
		/// <summary>
        /// Will prompt the user to enter a code used to verify a phone number.
        /// This will only be called if an external phone number is selected in
        /// startFlow().
        ///
        /// @retries number of retries left to validate a verification code.
        /// @timeout the verification code expires after the timeout fires. This is
        /// the total life time of the verification code.
        /// @timeLeft we might call verificationCodePrompt more than once for the
        /// same verification flow (i.e. when the verification code entered
        /// by the user is incorrect) so we give to the UI the amount of
        /// time left before the verification code expires.
        ///
        /// Returns a Promise. The value of the resolved promise will be the
        /// verification code introduced through the UI or an error in case of
        /// rejection of the promise.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		Gecko.JsVal VerificationCodePrompt(short retries, int timeout, int timeLeft);
		
		/// <summary>
        /// Notify the UI about the start of the verification process.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Verify();
		
		/// <summary>
        /// Notify the UI about an error in the verification process.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Error([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase error);
		
		/// <summary>
        /// Notify the UI about the succesful phone number verification.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Verified([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase verifiedPhoneNumber);
		
		/// <summary>
        /// Callback to be called when the user cancels the verification flow via UI.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		Gecko.JsVal GetOncancelAttribute();
		
		/// <summary>
        /// Callback to be called when the user cancels the verification flow via UI.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOncancelAttribute(Gecko.JsVal aOncancel);
		
		/// <summary>
        /// Callback to be called when the user requests a resend of a verification
        /// code.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		Gecko.JsVal GetOnresendcodeAttribute();
		
		/// <summary>
        /// Callback to be called when the user requests a resend of a verification
        /// code.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SetOnresendcodeAttribute(Gecko.JsVal aOnresendcode);
	}
}
