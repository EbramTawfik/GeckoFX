// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMCanvasRenderingContext2D.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// This interface remains only for the constants, for a context, use the
    /// WebIDL/Paris bindings instead (CanvasRenderingContext2D.webidl).
    /// The constants are used by CanvasRenderingContext2D::DrawWindow and are
    /// used in WindowsPreviewPerTab.jsm and some extensions. The constants can
    /// be referenced directly via a canvas context 2d rather than this interface,
    /// and that should be preferred in new code.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("4417cab7-c7eb-4e0c-b00a-c43842f0cba8")]
	public interface nsIDOMCanvasRenderingContext2D
	{
	}
	
	/// <summary>nsIDOMCanvasRenderingContext2DConsts </summary>
	public class nsIDOMCanvasRenderingContext2DConsts
	{
		
		// <summary>
        // Show the caret if appropriate when drawing
        // </summary>
		public const ulong DRAWWINDOW_DRAW_CARET = 0x01;
		
		// <summary>
        // be batched up
        // </summary>
		public const ulong DRAWWINDOW_DO_NOT_FLUSH = 0x02;
		
		// <summary>
        // Draw scrollbars and scroll the viewport if they are present
        // </summary>
		public const ulong DRAWWINDOW_DRAW_VIEW = 0x04;
		
		// <summary>
        // the pixels rendered to the screen.
        // </summary>
		public const ulong DRAWWINDOW_USE_WIDGET_LAYERS = 0x08;
		
		// <summary>
        // Don't synchronously decode images - draw what we have
        // </summary>
		public const ulong DRAWWINDOW_ASYNC_DECODE_IMAGES = 0x10;
	}
}
