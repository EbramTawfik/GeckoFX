// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMSerializer.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// The nsIDOMSerializer interface is really a placeholder till the W3C
    /// DOM Working Group defines a mechanism for serializing DOM nodes.
    /// An instance of this interface can be used to serialize a DOM document
    /// or any DOM subtree.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("9fd4ba15-e67c-4c98-b52c-7715f62c9196")]
	public interface nsIDOMSerializer
	{
		
		/// <summary>
        /// The subtree rooted by the specified element is serialized to
        /// a string.
        ///
        /// @param root The root of the subtree to be serialized. This could
        /// be any node, including a Document.
        /// @returns The serialized subtree in the form of a Unicode string
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SerializeToString([MarshalAs(UnmanagedType.Interface)] nsIDOMNode root, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase retval);
		
		/// <summary>
        /// The subtree rooted by the specified element is serialized to
        /// a byte stream using the character set specified.
        /// @param root The root of the subtree to be serialized. This could
        /// be any node, including a Document.
        /// @param stream The byte stream to which the subtree is serialized.
        /// @param charset The name of the character set to use for the encoding
        /// to a byte stream.  If this string is empty and root is
        /// a document, the document's character set will be used.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void SerializeToStream([MarshalAs(UnmanagedType.Interface)] nsIDOMNode root, [MarshalAs(UnmanagedType.Interface)] nsIOutputStream stream, [MarshalAs(UnmanagedType.LPStruct)] nsAUTF8StringBase charset);
	}
}
