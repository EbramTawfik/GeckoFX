// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMXULContainerElement.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///This Source Code Form is subject to the terms of the Mozilla Public
    /// License, v. 2.0. If a copy of the MPL was not distributed with this
    /// file, You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("800a68c7-b854-4597-a436-3055ce5c5c96")]
	public interface nsIDOMXULContainerItemElement
	{
		
		/// <summary>
        /// Returns the parent container if any.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMXULContainerElement GetParentContainerAttribute();
	}
	
	/// <summary>nsIDOMXULContainerElement </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("b2bc96b8-31fc-42f4-937a-bd27291af40b")]
	public interface nsIDOMXULContainerElement : nsIDOMXULContainerItemElement
	{
		
		/// <summary>
        /// Returns the parent container if any.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIDOMXULContainerElement GetParentContainerAttribute();
		
		/// <summary>
        /// Creates an item for the given label and value and appends it to the
        /// container.
        ///
        /// @param aLabel - the label for the new item
        /// @param aValue - the value of the new item
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMXULElement AppendItem([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aLabel, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aValue);
		
		/// <summary>
        /// Creates an item for the given label and value and inserts it into the
        /// container at the specified position.
        ///
        /// @param aIndex - the index where the new item will be inserted
        /// @param aLabel - the label for the new item
        /// @param aValue - the value of the new item
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMXULElement InsertItemAt(int aIndex, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aLabel, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aValue);
		
		/// <summary>
        /// Removes an item from the container.
        ///
        /// @param aIndex - index of the item to remove
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMXULElement RemoveItemAt(int aIndex);
		
		/// <summary>
        /// Returns a count of items in the container.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		uint GetItemCountAttribute();
		
		/// <summary>
        /// Returns the index of an item or -1 if the item is not in the container.
        ///
        /// @param aItem - the item to determine the index of
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		int GetIndexOfItem([MarshalAs(UnmanagedType.Interface)] nsIDOMXULElement aItem);
		
		/// <summary>
        /// Returns the item at a given index or null if the item is not is the
        /// container.
        ///
        /// @param aIndex - the index of the item to return
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		nsIDOMXULElement GetItemAtIndex(int aIndex);
	}
}
