// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsIDOMApplicationRegistry2.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// This interface is still here for backwards compatibility.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("5bd838b2-cf3d-406e-bbef-f633cf9e68de")]
	public interface mozIDOMApplicationRegistry2 : mozIDOMApplicationRegistry
	{
		
		/// <summary>
        /// Install a web app.
        ///
        /// @param manifestUrl : the URL of the webapps manifest.
        /// @param parameters  : A structure with optional information.
        /// {
        /// receipts: ...    Will be used to specify the payment receipts for this installation.
        /// categories: ...  Will be used to specify the categories of the webapp.
        /// }
        /// @returns           : A DOMRequest object, returning the app object in |result| if install succeeds.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIDOMDOMRequest Install([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase manifestUrl, ref Gecko.JsVal parameters);
		
		/// <summary>
        /// the request will return the application currently installed, or null.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIDOMDOMRequest GetSelf();
		
		/// <summary>
        /// the request will return the application if the app from that origin is installed
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIDOMDOMRequest CheckInstalled([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase manifestUrl);
		
		/// <summary>
        /// the request will return the applications installed from this origin, or null.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIDOMDOMRequest GetInstalled();
		
		/// <summary>
        /// Install a packaged web app.
        ///
        /// @param packageUrl : the URL of the webapps manifest.
        /// @param parameters : A structure with optional information.
        /// {
        /// receipts: ...    Will be used to specify the payment receipts for this installation.
        /// categories: ...  Will be used to specify the categories of the webapp.
        /// }
        /// @returns          : A DOMRequest object, returning the app object in |result| if install succeeds.
        /// </summary>
		[return: MarshalAs(UnmanagedType.Interface)]
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new nsIDOMDOMRequest InstallPackage([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase packageUrl, ref Gecko.JsVal parameters);
		
		/// <summary>Member GetMgmtAttribute </summary>
		/// <returns>A mozIDOMApplicationMgmt</returns>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		new mozIDOMApplicationMgmt GetMgmtAttribute();
	}
}
