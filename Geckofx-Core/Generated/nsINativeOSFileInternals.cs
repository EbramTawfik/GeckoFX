// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsINativeOSFileInternals.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// The result of a successful asynchronous operation.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("08B4CF29-3D65-4E79-B522-A694C322ED07")]
	public interface nsINativeOSFileResult
	{
		
		/// <summary>
        /// The actual value produced by the operation.
        ///
        /// Actual type of this value depends on the options passed to the
        /// operation.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		Gecko.JsVal GetResultAttribute(System.IntPtr jsContext);
		
		/// <summary>
        /// Delay between when the operation was requested on the main thread and
        /// when the operation was started off main thread.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		double GetDispatchDurationMSAttribute();
		
		/// <summary>
        /// Duration of the off main thread execution.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		double GetExecutionDurationMSAttribute();
	}
	
	/// <summary>
    /// A callback invoked in case of success.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("2C1922CA-CA1B-4099-8B61-EC23CFF49412")]
	public interface nsINativeOSFileSuccessCallback
	{
		
		/// <summary>
        /// A callback invoked in case of success.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Complete([MarshalAs(UnmanagedType.Interface)] nsINativeOSFileResult result);
	}
	
	/// <summary>
    /// A callback invoked in case of error.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("F612E0FC-6736-4D24-AA50-FD661B3B40B6")]
	public interface nsINativeOSFileErrorCallback
	{
		
		/// <summary>
        /// @param operation The name of the failed operation. Provided to aid
        /// debugging only, may change without notice.
        /// @param OSstatus The OS status of the operation (errno under Unix,
        /// GetLastError under Windows).
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Complete([MarshalAs(UnmanagedType.LPStruct)] nsACStringBase operation, int OSstatus);
	}
	
	/// <summary>
    /// A service providing native implementations of some of the features
    /// of OS.File.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("913362AD-1526-4623-9E6B-A2EB08AFBBB9")]
	public interface nsINativeOSFileInternalsService
	{
		
		/// <summary>
        /// Implementation of OS.File.read
        ///
        /// @param path The absolute path to the file to read.
        /// @param options An object that may contain some of the following fields
        /// - {number} bytes The maximal number of bytes to read.
        /// - {string} encoding If provided, return the result as a string, decoded
        /// using this encoding. Otherwise, pass the result as an ArrayBuffer.
        /// Invalid encodings cause onError to be called with the platform-specific
        /// "invalid argument" constant.
        /// - {string} compression Unimplemented at the moment.
        /// @param onSuccess The success callback.
        /// @param onError The error callback.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void Read([MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase path, ref Gecko.JsVal options, [MarshalAs(UnmanagedType.Interface)] nsINativeOSFileSuccessCallback onSuccess, [MarshalAs(UnmanagedType.Interface)] nsINativeOSFileErrorCallback onError, System.IntPtr jsContext);
	}
}
