// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsICellbroadcastMessenger.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    ///This Source Code Form is subject to the terms of the Mozilla Public
    /// License, v. 2.0. If a copy of the MPL was not distributed with this
    /// file, You can obtain one at http://mozilla.org/MPL/2.0/. </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("47764f4a-5b3f-11e4-a2ec-4b99529b9288")]
	public interface nsICellbroadcastMessenger
	{
		
		/// <summary>
        /// To broadcast 'cellbroadcast-received' system message.
        ///
        /// @param aServiceId
        /// The ID of Service where this info is notified from.
        /// @param aGsmGeographicalScope
        /// @See nsICellBroadcastService.GSM_GEOGRAPHICAL_SCOPE_*.
        /// @param aMessageCode
        /// The Message Code differentiates between messages from the same
        /// source and type (e.g., with the same Message Identifier).
        /// @param aMessageId
        /// Source and type of the message which is coded in binary.
        /// @param aLanguage
        /// ISO-639-1 language code for this message. Null if unspecified.
        /// @param aBody
        /// Text message carried by the message.
        /// @param aMessageClass
        /// @See nsICellBroadcastService.GSM_MESSAGE_CLASS_*.
        /// @param aTimestamp
        /// System time stamp at receival.
        /// @param aCdmaServiceCategory
        /// CDMA Service Category.
        /// @param aHasEtwsInfo
        /// True if ETWS Info is included in this message.
        /// @param aEtwsWarningType
        /// @See nsICellBroadcastService.GSM_ETWS_WARNING_*.
        /// @param aEtwsEmergencyUserAlert
        /// True if Emergency user alert indication is set.
        /// @param aEtwsPopup
        /// True if Message popup indication is set.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void NotifyCbMessageReceived(uint aServiceId, uint aGsmGeographicalScope, ushort aMessageCode, ushort aMessageId, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aLanguage, [MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = "Gecko.CustomMarshalers.AStringMarshaler")] nsAStringBase aBody, uint aMessageClass, long aTimestamp, uint aCdmaServiceCategory, [MarshalAs(UnmanagedType.U1)] bool aHasEtwsInfo, uint aEtwsWarningType, [MarshalAs(UnmanagedType.U1)] bool aEtwsEmergencyUserAlert, [MarshalAs(UnmanagedType.U1)] bool aEtwsPopup);
	}
}
