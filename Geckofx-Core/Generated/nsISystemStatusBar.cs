// --------------------------------------------------------------------------------------------
// Version: MPL 1.1/GPL 2.0/LGPL 2.1
// 
// The contents of this file are subject to the Mozilla Public License Version
// 1.1 (the "License"); you may not use this file except in compliance with
// the License. You may obtain a copy of the License at
// http://www.mozilla.org/MPL/
// 
// Software distributed under the License is distributed on an "AS IS" basis,
// WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
// for the specific language governing rights and limitations under the
// License.
// 
// <remarks>
// Generated by IDLImporter from file nsISystemStatusBar.idl
// 
// You should use these interfaces when you access the COM objects defined in the mentioned
// IDL/IDH file.
// </remarks>
// --------------------------------------------------------------------------------------------
namespace Gecko
{
	using System;
	using System.Runtime.InteropServices;
	using System.Runtime.InteropServices.ComTypes;
	using System.Runtime.CompilerServices;
	
	
	/// <summary>
    /// Allow applications to interface with the Mac OS X system status bar.
    /// </summary>
	[ComImport()]
	[InterfaceType(ComInterfaceType.InterfaceIsIUnknown)]
	[Guid("24493180-ee81-4b7c-8b17-9e69480b7b8a")]
	public interface nsISystemStatusBar
	{
		
		/// <summary>
        /// Add an item to the system status bar. Each item can only be present once,
        /// subsequent addItem calls with the same element will be ignored.
        /// The system status bar holds a strong reference to the added XUL menu
        /// element and the item will stay in the status bar until it is removed via
        /// a call to removeItem, or until the process shuts down.
        /// @param aDOMMenuElement A XUL menu element that contains a XUL menupopup
        /// with regular menu content. The menu's icon is put
        /// into the system status bar; clicking it will open
        /// a menu with the contents of the menupopup.
        /// The menu label is not shown.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void AddItem([MarshalAs(UnmanagedType.Interface)] nsIDOMElement aDOMMenuElement);
		
		/// <summary>
        /// Remove a previously-added item from the menu bar. Calling this with an
        /// element that has not been added before will be silently ignored.
        /// @param aDOMMenuElement The XUL menu element that you called addItem with.
        /// </summary>
		[MethodImpl(MethodImplOptions.InternalCall, MethodCodeType=MethodCodeType.Runtime)]
		void RemoveItem([MarshalAs(UnmanagedType.Interface)] nsIDOMElement aDOMMenuElement);
	}
}
